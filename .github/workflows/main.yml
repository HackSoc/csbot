name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]

jobs:
  tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        include:
          - python-version: "3.7"
            toxenv: py37
          - python-version: "3.8"
            toxenv: py38
          - python-version: "3.9"
            toxenv: py39
          - python-version: "3.10"
            toxenv: py310-flake8
    env:
      PYTHON: ${{ matrix.python-version }}
    steps:
      - name: examine environment
        run: env
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
      - name: Test with tox
        run: python -m tox
        env:
          TOXENV: ${{ matrix.toxenv }}
      - uses: codecov/codecov-action@v1
        with:
          env_vars: PYTHON

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          load: true
          push: false
          tags: csbot:latest
      - name: Run tests inside Docker
        run: docker run --rm csbot:latest pytest
      - name: Login to GitHub Container Registry
        if: github.event_name == 'push' && github.repository == 'HackSoc/csbot' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Docker image
        if: github.event_name == 'push' && github.repository == 'HackSoc/csbot' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ghcr.io/hacksoc/csbot/csbot:latest
